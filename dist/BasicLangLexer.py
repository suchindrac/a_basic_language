# Generated from BasicLang.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,113,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,11,4,
        11,72,8,11,11,11,12,11,73,1,12,4,12,77,8,12,11,12,12,12,78,1,13,
        1,13,3,13,83,8,13,1,14,4,14,86,8,14,11,14,12,14,87,1,15,4,15,91,
        8,15,11,15,12,15,92,1,16,4,16,96,8,16,11,16,12,16,97,1,16,1,16,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,3,18,110,8,18,1,18,1,18,0,
        0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,1,0,5,1,0,97,122,1,0,65,90,
        1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,119,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,
        0,7,45,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,
        0,0,0,17,59,1,0,0,0,19,64,1,0,0,0,21,66,1,0,0,0,23,71,1,0,0,0,25,
        76,1,0,0,0,27,82,1,0,0,0,29,85,1,0,0,0,31,90,1,0,0,0,33,95,1,0,0,
        0,35,101,1,0,0,0,37,105,1,0,0,0,39,40,5,61,0,0,40,2,1,0,0,0,41,42,
        5,42,0,0,42,4,1,0,0,0,43,44,5,47,0,0,44,6,1,0,0,0,45,46,5,43,0,0,
        46,8,1,0,0,0,47,48,5,45,0,0,48,10,1,0,0,0,49,50,5,40,0,0,50,12,1,
        0,0,0,51,52,5,41,0,0,52,14,1,0,0,0,53,54,5,112,0,0,54,55,5,114,0,
        0,55,56,5,105,0,0,56,57,5,110,0,0,57,58,5,116,0,0,58,16,1,0,0,0,
        59,60,5,101,0,0,60,61,5,120,0,0,61,62,5,105,0,0,62,63,5,116,0,0,
        63,18,1,0,0,0,64,65,5,58,0,0,65,20,1,0,0,0,66,67,5,60,0,0,67,68,
        5,45,0,0,68,69,5,62,0,0,69,22,1,0,0,0,70,72,7,0,0,0,71,70,1,0,0,
        0,72,73,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,24,1,0,0,0,75,77,
        7,1,0,0,76,75,1,0,0,0,77,78,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,
        79,26,1,0,0,0,80,83,3,23,11,0,81,83,3,25,12,0,82,80,1,0,0,0,82,81,
        1,0,0,0,83,28,1,0,0,0,84,86,7,2,0,0,85,84,1,0,0,0,86,87,1,0,0,0,
        87,85,1,0,0,0,87,88,1,0,0,0,88,30,1,0,0,0,89,91,7,3,0,0,90,89,1,
        0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,0,0,0,93,32,1,0,0,0,94,
        96,7,4,0,0,95,94,1,0,0,0,96,97,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,
        0,98,99,1,0,0,0,99,100,6,16,0,0,100,34,1,0,0,0,101,102,5,123,0,0,
        102,103,3,23,11,0,103,104,5,125,0,0,104,36,1,0,0,0,105,106,3,23,
        11,0,106,109,5,91,0,0,107,110,3,23,11,0,108,110,3,29,14,0,109,107,
        1,0,0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,112,5,93,0,0,112,38,
        1,0,0,0,8,0,73,78,82,87,92,97,109,1,6,0,0
    ]

class BasicLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    ID = 12
    CAPID = 13
    ANY = 14
    INT = 15
    NL = 16
    WS = 17
    VALUE_OF_VAR = 18
    VALUE_OF_LINK = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'*'", "'/'", "'+'", "'-'", "'('", "')'", "'print'", 
            "'exit'", "':'", "'<->'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "CAPID", "ANY", "INT", "NL", "WS", "VALUE_OF_VAR", "VALUE_OF_LINK" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "ID", "CAPID", "ANY", 
                  "INT", "NL", "WS", "VALUE_OF_VAR", "VALUE_OF_LINK" ]

    grammarFileName = "BasicLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


